{"version":3,"sources":["components/Step1/index.js","components/SciField/index.js","components/Advection/index.js","utilities/converters.js","components/MainInput/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Step1","react_default","a","createElement","Fragment","Typography_default","variant","gutterBottom","Grid_default","container","spacing","item","xs","sm","TextField_default","required","id","name","label","fullWidth","autoComplete","FormControlLabel_default","control","Checkbox_default","color","value","errorMessageDict","isFloat","isNumber","SciField","props","unit","rest","Object","objectWithoutProperties","validators","push","errorMessages","inputProps","map","validator","endAdornment","InputAdornment_default","position","lib","assign","InputProps","Advection","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onComponentChange","bind","assertThisInitialized","event","_event$target","target","changeHandler","_this2","refs","mainForm","isFormValid","then","val","advection","hydGrad","hydCond","porosity","_this$props","classes","ref","instantValidate","Switch_default","checked","type","onChange","switchHandle","switchBase","colorSwitchBase","colorChecked","bar","colorBar","components_SciField","sepVel","helperText","getCalculatedVelocity","disabled","React","Component","withStyles","theme","purple","&$colorChecked","& + $colorBar","backgroundColor","palette","common","grey","steps","MainInput","state","activeStep","handleNext","setState","handleBack","handleReset","handleSwitch","handleChange","stateObject","subClass","defineProperty","formKey","result","currentState","undefined","console","log","CssBaseline_default","AppBar_default","className","appBar","Toolbar_default","noWrap","layout","Stepper_default","orientation","index","Step_default","key","StepLabel_default","StepContent_default","step","advectionSwitchHandle","components_Advection","components_Step1","text","getStepContent","checkFormValidity","actionsContainer","Button_default","onClick","button","length","Paper_default","square","elevation","resetContainer","width","marginLeft","marginRight","breakpoints","up","paper","marginTop","marginBottom","padding","stepper","concat","buttons","display","justifyContent","App","components_MainInput","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3908c1e1.chunk.js","sourcesContent":["import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\n\nfunction Step1() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            autoComplete=\"fname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Last name\"\n            fullWidth\n            autoComplete=\"lname\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            autoComplete=\"billing address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"address2\"\n            name=\"address2\"\n            label=\"Address line 2\"\n            fullWidth\n            autoComplete=\"billing address-line2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            autoComplete=\"billing address-level2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            autoComplete=\"billing postal-code\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"country\"\n            name=\"country\"\n            label=\"Country\"\n            fullWidth\n            autoComplete=\"billing country\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\n            label=\"Use this address for payment details\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Step1\n","import React from \"react\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport { TextValidator } from \"react-material-ui-form-validator\"\n\nconst errorMessageDict = {\n\tisFloat: \"Value needs to be a number\",\n\tisNumber: \"Value needs to be a number\",\n\trequired: \"Required Value\"\n}\n\nconst SciField = (props) => {\n\tconst { unit, ...rest } = props\n\n\tif (props.required && props.validators) {\n\t\tprops.validators.push(\"required\")\n\t}\n\n\tlet errorMessages = [],\n\t\tinputProps = {}\n\tif (props.validators) {\n\t\terrorMessages = props.validators.map((validator) => {\n\t\t\treturn errorMessageDict[validator]\n\t\t})\n\t}\n\tif (props.unit) {\n\t\tinputProps = {\n\t\t\tendAdornment: <InputAdornment position=\"end\">{props.unit}</InputAdornment>\n\t\t}\n\t}\n\n\treturn (\n\t\t<TextValidator\n\t\t\t{...rest}\n\t\t\tfullWidth\n\t\t\tname={props.id}\n\t\t\tvariant=\"outlined\"\n\t\t\tInputProps={inputProps}\n\t\t\terrorMessages={errorMessages}\n\t\t/>\n\t)\n}\n\nexport default SciField\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Switch from \"@material-ui/core/Switch\"\nimport purple from \"@material-ui/core/colors/purple\"\nimport { ValidatorForm } from \"react-material-ui-form-validator\"\n\nimport SciField from \"../SciField\"\n\nimport { getSeepageVel } from \"../../utilities/converters\"\n\nconst styles = (theme) => ({\n  colorSwitchBase: {\n    color: purple[300],\n    \"&$colorChecked\": {\n      color: purple[500],\n      \"& + $colorBar\": {\n        backgroundColor: theme.palette.common.grey\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {}\n})\n\nclass Advection extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.onComponentChange = this.onComponentChange.bind(this)\n  }\n\n  onComponentChange(event) {\n    const { name, value } = event.target\n    this.props.changeHandler(\"advection\", name, value)\n  }\n\n  componentDidUpdate() {\n    let mainForm = this.refs.mainForm\n    mainForm.isFormValid().then((val) => {\n      if (val !== this.props.advection.isFormValid) {\n        this.props.changeHandler(\"advection\", \"isFormValid\", val)\n      }\n    })\n  }\n\n  getCalculatedVelocity() {\n    return getSeepageVel(\n      this.props.advection.hydGrad,\n      this.props.advection.hydCond,\n      this.props.advection.porosity\n    )\n  }\n\n  render() {\n    const { classes, advection } = this.props\n    return (\n      <ValidatorForm ref=\"mainForm\" instantValidate>\n        <Grid container spacing={24}>\n          <Grid item xs={12}>\n            Seepage Velocity\n            <Switch\n              checked={advection.type === 1}\n              onChange={this.props.switchHandle}\n              classes={{\n                switchBase: classes.colorSwitchBase,\n                checked: classes.colorChecked,\n                bar: classes.colorBar\n              }}\n            />\n            Hydraulic Parameters\n          </Grid>\n\n          {advection.type === 0 && (\n            <Grid item xs={12} sm={6}>\n              <SciField\n                value={advection.sepVel}\n                id=\"sepVel\"\n                label={\n                  <React.Fragment>\n                    Seepage Velocity (V<sub>s</sub>)\n                  </React.Fragment>\n                }\n                onChange={this.onComponentChange}\n                helperText=\"Help Text about Seepage Velocity\"\n                unit=\"ft/yr\"\n                required\n                validators={[\"isFloat\"]}\n              />\n            </Grid>\n          )}\n\n          {advection.type === 1 && (\n            <React.Fragment>\n              <Grid item xs={12}>\n                <Typography variant=\"body2\" gutterBottom />\n              </Grid>\n              <Grid item xs={12}>\n                <SciField\n                  validators={[\"isFloat\"]}\n                  value={advection.hydCond}\n                  id=\"hydCond\"\n                  label={<React.Fragment>Hydraulic Conductivity (K)</React.Fragment>}\n                  onChange={this.onComponentChange}\n                  helperText=\"Help Text about Hydraulic Conductivity\"\n                  unit=\"cm/sec\"\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <SciField\n                  validators={[\"isFloat\"]}\n                  value={advection.hydGrad}\n                  id=\"hydGrad\"\n                  label={<React.Fragment>Hydraulic Gradient (i)</React.Fragment>}\n                  onChange={this.onComponentChange}\n                  helperText=\"Help Text about Hydraulic Gradient\"\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <SciField\n                  validators={[\"isFloat\"]}\n                  value={advection.porosity}\n                  id=\"porosity\"\n                  label={<React.Fragment>Effective Porosity (n)</React.Fragment>}\n                  onChange={this.onComponentChange}\n                  helperText=\"Help Text Effective Porosity\"\n                  required\n                />\n              </Grid>\n              {advection.isFormValid && (\n                <Grid item xs={12}>\n                  <SciField\n                    value={this.getCalculatedVelocity()}\n                    id=\"porosity\"\n                    label={<React.Fragment>Calculated Seepage Velocity</React.Fragment>}\n                    onChange={this.onComponentChange}\n                    helperText=\"Calculated from the above inputs\"\n                    unit=\"cm/sec\"\n                    disabled\n                  />\n                </Grid>\n              )}\n            </React.Fragment>\n          )}\n        </Grid>\n      </ValidatorForm>\n    )\n  }\n}\n\nAdvection.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Advection)\n","const getSeepageVel = (hydGrad, hydCond, porosity) => {\n\t// Ensure it gets turned into a float\n\treturn (hydCond * hydGrad * 1.0) / porosity\n}\n\nexport { getSeepageVel }\n","import React from \"react\"\n\nimport PropTypes from \"prop-types\"\nimport withStyles from \"@material-ui/core/styles/withStyles\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Stepper from \"@material-ui/core/Stepper\"\nimport Step from \"@material-ui/core/Step\"\nimport StepLabel from \"@material-ui/core/StepLabel\"\nimport StepContent from \"@material-ui/core/StepContent\"\nimport Button from \"@material-ui/core/Button\"\nimport Typography from \"@material-ui/core/Typography\"\n\n// Actual Steps\n\nimport Step1 from \"../Step1\"\nimport Advection from \"../Advection\"\n\nconst styles = (theme) => ({\n\tappBar: {\n\t\tposition: \"relative\"\n\t},\n\tlayout: {\n\t\twidth: \"auto\",\n\t\tmarginLeft: theme.spacing.unit * 2,\n\t\tmarginRight: theme.spacing.unit * 2,\n\t\t[theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n\t\t\twidth: 600,\n\t\t\tmarginLeft: \"auto\",\n\t\t\tmarginRight: \"auto\"\n\t\t}\n\t},\n\tpaper: {\n\t\tmarginTop: theme.spacing.unit * 3,\n\t\tmarginBottom: theme.spacing.unit * 3,\n\t\tpadding: theme.spacing.unit * 2,\n\t\t[theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n\t\t\tmarginTop: theme.spacing.unit * 6,\n\t\t\tmarginBottom: theme.spacing.unit * 6,\n\t\t\tpadding: theme.spacing.unit * 3\n\t\t}\n\t},\n\tstepper: {\n\t\tpadding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`\n\t},\n\tbuttons: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\"\n\t},\n\tbutton: {\n\t\tmarginTop: theme.spacing.unit * 3,\n\t\tmarginLeft: theme.spacing.unit\n\t}\n})\n\nconst steps = [\n\t\"Enter Advection Settings\",\n\t\"Enter Dispersion Settings\",\n\t\"Enter Adsorption Settings\"\n]\n\nfunction getStepContent(step, state, advectionSwitchHandle, changeHandler) {\n\tswitch (step) {\n\t\tcase 0:\n\t\t\treturn (\n\t\t\t\t<Advection\n\t\t\t\t\tadvection={state.advection}\n\t\t\t\t\tswitchHandle={advectionSwitchHandle}\n\t\t\t\t\tchangeHandler={changeHandler}\n\t\t\t\t/>\n\t\t\t)\n\t\tcase 1:\n\t\t\treturn (\n\t\t\t\t<Advection\n\t\t\t\t\tadvection={state.advection}\n\t\t\t\t\tswitchHandle={advectionSwitchHandle}\n\t\t\t\t\tchangeHandler={changeHandler}\n\t\t\t\t/>\n\t\t\t)\n\t\tcase 2:\n\t\t\treturn (\n\t\t\t\t<Advection\n\t\t\t\t\tadvection={state.advection}\n\t\t\t\t\tswitchHandle={advectionSwitchHandle}\n\t\t\t\t\tchangeHandler={changeHandler}\n\t\t\t\t/>\n\t\t\t)\n\t\tdefault:\n\t\t\treturn <Step1 text=\"Step 1\" />\n\t\t// throw new Error(\"Unknown step\")\n\t}\n}\n\nclass MainInput extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.handleSwitch = this.handleSwitch.bind(this)\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t}\n\n\tstate = {\n\t\tactiveStep: 0,\n\t\tadvection: {\n\t\t\ttype: 0, //0 is seepage, 1 is hydraulic,\n\t\t\tisFormValid: false\n\t\t}\n\t}\n\n\thandleNext = () => {\n\t\tthis.setState((state) => ({\n\t\t\tactiveStep: state.activeStep + 1\n\t\t}))\n\t}\n\n\thandleBack = () => {\n\t\tthis.setState((state) => ({\n\t\t\tactiveStep: state.activeStep - 1\n\t\t}))\n\t}\n\n\thandleReset = () => {\n\t\tthis.setState({\n\t\t\tactiveStep: 0\n\t\t})\n\t}\n\n\thandleSwitch(event) {\n\t\tlet stateObject = this.state.advection\n\t\tstateObject.type = this.state.advection.type === 1 ? 0 : 1\n\t\tthis.setState({\n\t\t\tadvection: stateObject\n\t\t})\n\t\t// console.log(JSON.stringify(this.state, null, 4))\n\t}\n\n\thandleChange(subClass, name, value) {\n\t\tif (subClass) {\n\t\t\tlet stateObject = this.state[subClass]\n\t\t\tstateObject[name] = value\n\t\t\tthis.setState({\n\t\t\t\t[subClass]: stateObject\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\t[name]: value\n\t\t\t})\n\t\t}\n\n\t\t// console.log(JSON.stringify(this.state, null, 4))\n\t}\n\n\tcheckFormValidity(formKey, result) {\n\t\tlet currentState = this.state[formKey].isFormValid\n\t\tif (currentState === undefined) {\n\t\t\tcurrentState = result\n\t\t} else {\n\t\t\tcurrentState = currentState && result\n\t\t}\n\t\tlet stateObject = this.state[formKey]\n\t\tstateObject[\"isFormValid\"] = currentState\n\t\tconsole.log(\"form valid:\", stateObject[\"isFormValid\"])\n\t\tthis.setState({\n\t\t\t[formKey]: stateObject\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { classes } = this.props\n\t\tconst { activeStep } = this.state\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" noWrap>\n\t\t\t\t\t\t\tBiochlor on the Web\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className={classes.layout}>\n\t\t\t\t\t<Stepper activeStep={activeStep} orientation=\"vertical\">\n\t\t\t\t\t\t{steps.map((label, index) => (\n\t\t\t\t\t\t\t<Step key={label}>\n\t\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t\t\t\t\t\t<StepContent>\n\t\t\t\t\t\t\t\t\t{getStepContent(\n\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\tthis.state,\n\t\t\t\t\t\t\t\t\t\tthis.handleSwitch,\n\t\t\t\t\t\t\t\t\t\tthis.handleChange,\n\t\t\t\t\t\t\t\t\t\tthis.checkFormValidity\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<div className={classes.actionsContainer}>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{activeStep !== 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={activeStep === 0}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleBack}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleNext}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{activeStep === steps.length - 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"Finish\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Next\"}\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</StepContent>\n\t\t\t\t\t\t\t</Step>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Stepper>\n\t\t\t\t\t{activeStep === steps.length && (\n\t\t\t\t\t\t<Paper square elevation={0} className={classes.resetContainer}>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tAll steps completed - you&apos;re finished\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Button onClick={this.handleReset} className={classes.button}>\n\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nMainInput.propTypes = {\n\tclasses: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(MainInput)\n","import React from \"react\"\nimport MainInput from \"../MainInput\"\n\nclass App extends React.Component {\n\trender() {\n\t\treturn <MainInput />\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./components/App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}